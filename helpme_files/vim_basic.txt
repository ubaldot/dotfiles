MOVING:
general motion                  hjkl,wW,bB
beginning,end of line           0 or ^, $
top, middle, bottom             H, M, L
Formatting text (textwidth)     gggqG
very long words                 gj, gk, gq (break long line in multiple lines)
jump to, jump from              <c-i>, <c-o> (<c-å> :ALEGoToDefinition)
tags (to, from)                 <c-å>, <c-t>
markers (set, jump)             ma,'a (Capital letters for inter-file jumps)

INSERT:
general insert                  i, I, a, A, o, O, r, R, ci( -> change inside a ()
read                            :{line}read {file | !cmd}
                                :13read !ls -al (the output of ls -al is placed below line 13)
                                :$read +ff=unix myfile.txt (myfile content is appended at the end of the buffer)
LIST:
Local list                      :lopen, :lnext :lprev
Quickfix list (global)          :copen, :cnext, :cprev, :call setqflist([]) to clean-up

SEARCH/REPLACE:
find next, prev (under cursor)     *, #
search in current file             /foo<CR> (n=next, N=prev) (\<foo\> match-case)
search word in files               :vimgrep/foo/gjf files(s) (Quickfix list)
                                      g=every match is added, j=no direct jump to matches, f=fuzzy search
                                    Otherwise just use :cn :cp

Get list of lines with foo         :ilist /foo/ (differently than :g this only return lines)
replace old_name with new_name     :[range]s[ubstitute]/old_name/new_name/gci (see :VimHelpSubstitute for more)

WITH args AND argdo:
define args                      :args **/*.py (use :args also display the arglist)
add,delete args from arglist     :arga, :argd (:argdo bw to wipe all the buffers opened by args)
execute commands on args         :argdo cmd | update | bw
                                 examples :argdo normal @a | update | bw, :argdo 10,15s/foo/bar/gi | update | bw
                                 note: update is to save the file and bw to wipe all the buffers in arglist.
exec cmds on items of QuickFix   :cdo cmd
exec cmds on files of QuickFix   :cfdo cmd

If you have too many files, it is better to use :vimgrep/\%1l/j **/*.py to populate the Quickfix list (:h \%l)
with the file names, and then use e.g. :cfdo normal @a | update | bw or :cfdo s/foo/bar/g | update | bw

WINDOWS (<c-w>):
move cursor to other window  <c-{hjkl}>
place current window         <c-w>HJKL
maximize window              <c-w>o

* buffers are files, windows are "views" on buffers, tabs are full layout of windows.

SCROLLING:
scroll down, scroll up       <c-f>,<c-b>/<c-d>,<c-u>/<c-e>,<c-y>
center window                zz

REGISTERS:
select register "a" to yank or paste   "a then you choose what to do, e.g yy or p
clipboard register + (or *)
filename register  %
access register from command line <c-r> (it gives you the ")

HELP:
There are two manuals: user and reference.
:help (start typing) <c-d>
:map (see your mappings)
:h list-functions
:h key-notation
search for  romainl idiomatic-vim on github
